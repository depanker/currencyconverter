plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'maven-publish'
	id "com.jfrog.artifactory" version "4.15.1"
}


group = 'com.depanker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:{project-version}'
	testImplementation 'com.squareup.okhttp3:okhttp:4.4.0'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.4.0'
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

artifactory {
	contextUrl = 'http://localhost:8081/artifactory'
	publish {
		repository {
			repoKey = 'gradle-release-local'
			username = 'admin'
			password = 'admin@123'
			maven = true
		}
		defaults {
			// Reference to Gradle publications defined in the build script.
			// This is how we tell the Artifactory Plugin which artifacts should be
			// published to Artifactory.
			publications('mavenJava')
			publishArtifacts = true
			// Properties to be attached to the published artifacts.
			properties = ['qa.level': 'basic', 'dev.team' : 'core']
			// Publish generated POM files to Artifactory (true by default)
			publishPom = true
		}
	}
	resolve {
		repoKey = 'jcenter'
		maven = true
	}
}
//Required by Gradle 6 to publish spring boot jar
task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	archiveClassifier = "sources"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
//			This below commented code will publish *.module and *-sources.jar
//			When commented only *.pom and *.jar will be published
			/*
			configurations {
				[apiElements, runtimeElements].each {
					it.outgoing.artifacts.removeIf {
						it.buildDependencies.getDependencies(null).contains(jar) }
					it.outgoing.artifact(bootJar)
				}
			}
			from components.java
			 */
			//Required by Gradle 6 to publish spring boot jar
			artifact sourceJar

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}